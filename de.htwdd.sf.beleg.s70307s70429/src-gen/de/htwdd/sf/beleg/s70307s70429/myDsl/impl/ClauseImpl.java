/**
 * generated by Xtext 2.9.2
 */
package de.htwdd.sf.beleg.s70307s70429.myDsl.impl;

import de.htwdd.sf.beleg.s70307s70429.myDsl.Clause;
import de.htwdd.sf.beleg.s70307s70429.myDsl.MyDslPackage;
import de.htwdd.sf.beleg.s70307s70429.myDsl.Predicate;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Clause</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.htwdd.sf.beleg.s70307s70429.myDsl.impl.ClauseImpl#getFact <em>Fact</em>}</li>
 *   <li>{@link de.htwdd.sf.beleg.s70307s70429.myDsl.impl.ClauseImpl#getClause1 <em>Clause1</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ClauseImpl extends MinimalEObjectImpl.Container implements Clause
{
  /**
   * The cached value of the '{@link #getFact() <em>Fact</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFact()
   * @generated
   * @ordered
   */
  protected Predicate fact;

  /**
   * The cached value of the '{@link #getClause1() <em>Clause1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClause1()
   * @generated
   * @ordered
   */
  protected EObject clause1;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ClauseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.CLAUSE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Predicate getFact()
  {
    return fact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFact(Predicate newFact, NotificationChain msgs)
  {
    Predicate oldFact = fact;
    fact = newFact;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.CLAUSE__FACT, oldFact, newFact);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFact(Predicate newFact)
  {
    if (newFact != fact)
    {
      NotificationChain msgs = null;
      if (fact != null)
        msgs = ((InternalEObject)fact).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CLAUSE__FACT, null, msgs);
      if (newFact != null)
        msgs = ((InternalEObject)newFact).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CLAUSE__FACT, null, msgs);
      msgs = basicSetFact(newFact, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CLAUSE__FACT, newFact, newFact));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getClause1()
  {
    return clause1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClause1(EObject newClause1, NotificationChain msgs)
  {
    EObject oldClause1 = clause1;
    clause1 = newClause1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.CLAUSE__CLAUSE1, oldClause1, newClause1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClause1(EObject newClause1)
  {
    if (newClause1 != clause1)
    {
      NotificationChain msgs = null;
      if (clause1 != null)
        msgs = ((InternalEObject)clause1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CLAUSE__CLAUSE1, null, msgs);
      if (newClause1 != null)
        msgs = ((InternalEObject)newClause1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CLAUSE__CLAUSE1, null, msgs);
      msgs = basicSetClause1(newClause1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CLAUSE__CLAUSE1, newClause1, newClause1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.CLAUSE__FACT:
        return basicSetFact(null, msgs);
      case MyDslPackage.CLAUSE__CLAUSE1:
        return basicSetClause1(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.CLAUSE__FACT:
        return getFact();
      case MyDslPackage.CLAUSE__CLAUSE1:
        return getClause1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.CLAUSE__FACT:
        setFact((Predicate)newValue);
        return;
      case MyDslPackage.CLAUSE__CLAUSE1:
        setClause1((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CLAUSE__FACT:
        setFact((Predicate)null);
        return;
      case MyDslPackage.CLAUSE__CLAUSE1:
        setClause1((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CLAUSE__FACT:
        return fact != null;
      case MyDslPackage.CLAUSE__CLAUSE1:
        return clause1 != null;
    }
    return super.eIsSet(featureID);
  }

} //ClauseImpl
